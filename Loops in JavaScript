Looping Control Statements
- Looping is the process of repeating a set of statements until the given condition is satisfied.
- Loop requires initialization, condition and counter.
- Loops are created by using
        a) for
        b) while
        c) do while

The "FOR" loop:
- It is a looping control statement used by developers when it is sure about the number of iterations and iteration counter will not change dynamically.

Syntax:
    for(initialization; condition; counter)
    {
    }

Ex:
    for(var i = 1; i<=10; i++ )
    {
        console.log(i);
    }

    var i = 1;
    for(   ; i<=10; i++)
    {
    }

Ex:
<script>
    for(var i = 1; i<=10; i++)
    {
      document.write(i + "<br>");
    }
</script>

Task: Write a program to print multiplication table for given number

      function PrintTable(n)
      {
        //
      }
      PrintTable(5);

      5  X  1  = 5
      5  X  2  = 10
      5  X  3  = 15
      ...
      5  X 10 = 50

Ex:
<script>
    function PrintTable(n){
        for(var i=1; i<=10; i++)
        {
            document.write(`${n} X ${i} = ${n * i}<br>`);
        }
    }
    PrintTable(parseInt(prompt("Enter Number")));
</script>



Task : Write a program to find factorial of number?

       function FindFactorial(n)
       {

       }
       FindFactorial(5);          5 x 4 x 3 x 2 x 1 = 120
   
      O/P:   Factorial of 5 is 120

Ex:
<script>
   function FindFactorial(n){
       
      var factorial = 1;
      for(var i=1; i<=n; i++){
          factorial*=i;
      }
      document.write(`Factorial of ${n} is ${factorial}`);
   }
   FindFactorial(parseInt(prompt("Enter Number")));
</script>

Ex:
<script>
      var cartItems = [
         {Name: "TV", Price: 34000.42},
         {Name: "Mobile", Price:12000.44},
         {Name: "Watch", Price: 3200.46},
         {Name: "Shoe", Price: 1500.56}
      ];
      var TotalAmount = 0;
      for(var i=0; i<cartItems.length; i++){
           TotalAmount += cartItems[i].Price
      }
      document.write(`Total Cart Amount ${TotalAmount}`);
</script>

Note: To access multiple elements JavaScript provides the methods

        a) getElementsByTagName()
        b) getElementsByClassName()
        c) getElementsByName()

      Above methods return an array.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Document</title>
   <style>
      ul {
         list-style: none;
      }
   </style>
   <script>
      function SubmitClick(){
         var checkboxes = document.getElementsByName("product");
         var productName = "";
         for(var i=0; i<checkboxes.length; i++){
              if(checkboxes[i].checked){
                 productName+=checkboxes[i].value + "<br>";
              }
         }
         document.querySelector("p").innerHTML = `Selected Products: <br> ${productName}`;
      }
   </script>
</head>
<body>
   <ul>
      <li> <input type="checkbox" name="product" value="TV"> <label>TV</label> </li>
      <li> <input type="checkbox" name="product" value="Mobile"> <label>Mobile</label> </li>
      <li> <input type="checkbox" name="product" value="Camera"> <label>Camera</label> </li>
      <li> <input type="checkbox" name="product" value="Watch"> <label>Watch</label> </li>
   </ul>
   <button onclick="SubmitClick()">Submit</button>
   <p></p>
</body>
</html>




Ex:
<script>
     for(var i=10; i>=1; i--){
         document.write(i+ "<br>");
     }
</script>

EX:
<script>
     for(var i=1; i<=10; i=i+2){
         document.write(i+ "<br>");
     }
</script>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Document</title>
   <script>
      var categories = ["All", "Electronics", "Fashion"];
      function bodyload(){
          for(var i=0; i<categories.length; i++)
          {
              var option = document.createElement("option");
              option.text = categories[i];
              option.value = categories[i];

              document.querySelector("select").appendChild(option);
          }
      }
   </script>
</head>
<body onload="bodyload()">
   <select>

   </select>
</body>
</html>
